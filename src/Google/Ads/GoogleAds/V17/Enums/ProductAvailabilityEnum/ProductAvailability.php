<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/googleads/v17/enums/product_availability.proto

namespace Google\Ads\GoogleAds\V17\Enums\ProductAvailabilityEnum;

use UnexpectedValueException;

/**
 * Product availability.
 *
 * Protobuf type <code>google.ads.googleads.v17.enums.ProductAvailabilityEnum.ProductAvailability</code>
 */
class ProductAvailability
{
    /**
     * Enum unspecified.
     *
     * Generated from protobuf enum <code>UNSPECIFIED = 0;</code>
     */
    const UNSPECIFIED = 0;
    /**
     * Used for return value only. Represents values unknown in this version.
     *
     * Generated from protobuf enum <code>UNKNOWN = 1;</code>
     */
    const UNKNOWN = 1;
    /**
     * The product is in stock.
     *
     * Generated from protobuf enum <code>IN_STOCK = 2;</code>
     */
    const IN_STOCK = 2;
    /**
     * The product is out of stock.
     *
     * Generated from protobuf enum <code>OUT_OF_STOCK = 3;</code>
     */
    const OUT_OF_STOCK = 3;
    /**
     * The product can be preordered.
     *
     * Generated from protobuf enum <code>PREORDER = 4;</code>
     */
    const PREORDER = 4;

    private static $valueToName = [
        self::UNSPECIFIED => 'UNSPECIFIED',
        self::UNKNOWN => 'UNKNOWN',
        self::IN_STOCK => 'IN_STOCK',
        self::OUT_OF_STOCK => 'OUT_OF_STOCK',
        self::PREORDER => 'PREORDER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ProductAvailability::class, \Google\Ads\GoogleAds\V17\Enums\ProductAvailabilityEnum_ProductAvailability::class);

